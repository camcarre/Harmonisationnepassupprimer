{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://harmonisation-excel/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://harmonisation-excel/webpack/bootstrap","webpack://harmonisation-excel/webpack/runtime/compat get default export","webpack://harmonisation-excel/webpack/runtime/define property getters","webpack://harmonisation-excel/webpack/runtime/global","webpack://harmonisation-excel/webpack/runtime/hasOwnProperty shorthand","webpack://harmonisation-excel/webpack/runtime/publicPath","webpack://harmonisation-excel/webpack/runtime/jsonp chunk loading","webpack://harmonisation-excel/./src/taskpane/taskpane.js","webpack://harmonisation-excel/./src/taskpane/taskpane.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office, XLSX */\n\nfunction levenshtein(a, b) {\n  if (a.length === 0) return b.length;\n  if (b.length === 0) return a.length;\n  const matrix = [];\n  for (let i = 0; i <= b.length; i++) matrix[i] = [i];\n  for (let j = 0; j <= a.length; j++) matrix[0][j] = j;\n  for (let i = 1; i <= b.length; i++) {\n    for (let j = 1; j <= a.length; j++) {\n      if (b.charAt(i - 1) === a.charAt(j - 1)) {\n        matrix[i][j] = matrix[i - 1][j - 1];\n      } else {\n        matrix[i][j] = Math.min(\n          matrix[i - 1][j - 1] + 1, // substitution\n          matrix[i][j - 1] + 1,     // insertion\n          matrix[i - 1][j] + 1      // deletion\n        );\n      }\n    }\n  }\n  return matrix[b.length][a.length];\n}\n\nfunction similarity(a, b) {\n  if (!a && !b) return 1;\n  if (!a || !b) return 0;\n  const dist = levenshtein(a, b);\n  return 1 - dist / Math.max(a.length, b.length);\n}\n\nfunction applyOfficeThemeColor() {\n  let accent = '#2d89ef'; // bleu par défaut\n  if (Office.context && Office.context.host && Office.context.host.toLowerCase() === 'excel') {\n    accent = '#217346'; // vert Excel officiel\n  }\n  if (Office.context && Office.context.officeTheme) {\n    accent = Office.context.officeTheme.accent1 || Office.context.officeTheme.primaryColor || accent;\n  }\n  document.documentElement.style.setProperty('--primary-color', accent);\n  document.documentElement.style.setProperty('--primary-color-hover', shadeColor(accent, -20));\n}\n\nfunction shadeColor(color, percent) {\n  let R = parseInt(color.substring(1,3),16);\n  let G = parseInt(color.substring(3,5),16);\n  let B = parseInt(color.substring(5,7),16);\n  R = parseInt(R * (100 + percent) / 100);\n  G = parseInt(G * (100 + percent) / 100);\n  B = parseInt(B * (100 + percent) / 100);\n  R = (R<255)?R:255; G = (G<255)?G:255; B = (B<255)?B:255;\n  return \"#\" + (0x1000000 + (R<<16) + (G<<8) + B).toString(16).slice(1);\n}\n\nfunction showSection(section) {\n  document.getElementById('app-body').style.display = 'flex';\n  document.querySelectorAll('.welcome-panel, .harmonisation-container, .tools-container').forEach(el => {\n    el.classList.remove('active-section');\n    el.style.display = 'none';\n  });\n  const el = document.querySelector(section);\n  if (el) {\n    el.classList.add('active-section');\n    // Affichage adapté selon la section\n    el.style.display = section === '.tools-container' ? 'flex' : 'block';\n    // Correction : forcer display block/flex même si déjà présent\n    el.style.removeProperty('display');\n    if (section === '.welcome-panel') el.style.display = 'block';\n    else if (section === '.harmonisation-container') el.style.display = 'block';\n    else if (section === '.tools-container') el.style.display = 'flex';\n  }\n}\n\nfunction setActiveNav(id) {\n  document.querySelectorAll('.mini-nav-btn').forEach(btn => btn.classList.remove('active'));\n  document.getElementById(id).classList.add('active');\n}\n\n// Système d'aide\nfunction initHelpSystem() {\n  const helpBtn = document.createElement('button');\n  helpBtn.id = 'show-help-btn';\n  helpBtn.innerHTML = '?';\n  helpBtn.style.cssText = 'position:fixed;top:20px;right:20px;width:32px;height:32px;border-radius:4px;background:#1890ff;color:white;font-size:16px;border:none;cursor:pointer;box-shadow:0 2px 8px rgba(0,0,0,0.15);display:flex;align-items:center;justify-content:center;';\n  document.body.appendChild(helpBtn);\n  \n  helpBtn.onclick = function() {\n    const helpModal = document.getElementById('help-modal');\n    if (helpModal) helpModal.style.display = 'block';\n  };\n}\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    // Récupérer la BDD mémorisée\n    const bddData = Office.context.document.settings.get('bddWorkbookData');\n    const bddName = Office.context.document.settings.get('bddWorkbookName');\n    let bddLoaded = false;\n    if (bddData && bddName) {\n      try {\n        const data = new Uint8Array(bddData);\n        window.bddWorkbook = XLSX.read(data, { type: 'array' });\n        window.bddFilename = bddName;\n        bddLoaded = true;\n      } catch (e) {\n        window.bddWorkbook = null;\n        window.bddFilename = null;\n        bddLoaded = false;\n      }\n    }\n    // Afficher le nom du fichier uniquement si la BDD est bien chargée\n    const filenameSpan = document.getElementById('bdd-filename');\n    if (bddLoaded && window.bddWorkbook) {\n      filenameSpan.textContent = `Fichier chargé : ${window.bddFilename}`;\n      filenameSpan.style.display = 'inline';\n      document.getElementById('load-bdd-btn').textContent = 'Changer de BDD';\n      // Remplir la liste des thèmes\n      const themeSelect = document.getElementById('theme-select');\n      themeSelect.innerHTML = '';\n      window.bddWorkbook.SheetNames.forEach(name => {\n        const option = document.createElement('option');\n        option.value = name;\n        option.textContent = name;\n        themeSelect.appendChild(option);\n      });\n      document.getElementById('theme-section').style.display = 'block';\n      document.getElementById('harmonize-btn').style.display = 'inline-block';\n      updateMappingTable();\n    } else {\n      filenameSpan.textContent = '';\n      filenameSpan.style.display = 'none';\n      document.getElementById('theme-section').style.display = 'none';\n      document.getElementById('harmonize-btn').style.display = 'none';\n    }\n    // Initialisation des handlers et navigation toujours exécutée\n    initHarmonisationHandlers();\n    showSection('.welcome-panel');\n    setActiveNav('nav-home');\n    // Appliquer la couleur du thème Office à la variable CSS\n    applyOfficeThemeColor();\n\n    // Initialisation du système d'aide\n    initHelpSystem();\n  }\n});\n\n// Utilitaire pour charger la BDD depuis Office settings à chaque accès\nfunction getCurrentBddWorkbook() {\n  const bddData = Office.context.document.settings.get('bddWorkbookData');\n  if (!bddData) return null;\n  return XLSX.read(new Uint8Array(bddData), { type: 'array' });\n}\nfunction getCurrentBddFilename() {\n  return Office.context.document.settings.get('bddWorkbookName') || '';\n}\n\nfunction updateMappingTable() {\n  const theme = document.getElementById('theme-select').value;\n  const bddWorkbook = getCurrentBddWorkbook();\n  if (!bddWorkbook || !theme) {\n    document.getElementById('search-section').style.display = 'none';\n    return;\n  }\n  const sheet = bddWorkbook.Sheets[theme];\n  const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n  const tbody = document.querySelector('#mapping-table tbody');\n  tbody.innerHTML = '';\n\n  // Créer la liste de suggestions\n  const searchInput = document.getElementById('search-mapping');\n  const datalist = document.createElement('datalist');\n  datalist.id = 'harmonisation-suggestions';\n  \n  // Récupérer toutes les valeurs harmonisées uniques\n  const uniqueHarmonises = new Set();\n  for (let i = 1; i < data.length; i++) {\n    if (data[i] && data[i][1]) uniqueHarmonises.add(data[i][1]);\n  }\n  \n  // Ajouter les options au datalist\n  uniqueHarmonises.forEach(value => {\n    const option = document.createElement('option');\n    option.value = value;\n    datalist.appendChild(option);\n  });\n  \n  // Ajouter le datalist au document\n  document.body.appendChild(datalist);\n  searchInput.setAttribute('list', 'harmonisation-suggestions');\n\n  // Transformer les données en résultats de recherche\n  const allSearchResults = data.slice(1).map(row => ({\n    brut: row[0],\n    harm: row[1]\n  }));\n\n  // Fonction pour filtrer et afficher les résultats\n  function filterAndDisplayResults(searchText = '') {\n    tbody.innerHTML = '';\n    const searchResults = allSearchResults.filter(result => {\n      if (!searchText) return true;\n      const searchLower = searchText.toLowerCase();\n      return (result.brut && result.brut.toString().toLowerCase().includes(searchLower)) ||\n             (result.harm && result.harm.toString().toLowerCase().includes(searchLower));\n    });\n\n    searchResults.forEach(result => {\n      const tr = document.createElement('tr');\n      tr.innerHTML = `\n        <td>${result.brut}</td>\n        <td class=\"apres-cell\">${result.harm}</td>\n      `;\n      tbody.appendChild(tr);\n    });\n  }\n\n  // Initialiser la recherche\n  searchInput.addEventListener('input', function(e) {\n    filterAndDisplayResults(e.target.value.trim());\n  });\n\n  // Afficher tous les résultats au début\n  filterAndDisplayResults();\n  document.getElementById('search-section').style.display = 'block';\n}\n\n/**\n * Initialise les handlers pour l'interface d'harmonisation.\n */\nfunction initHarmonisationHandlers() {\n  // Navigation\n  document.getElementById('nav-home').addEventListener('click', () => {\n    showSection('.welcome-panel');\n    setActiveNav('nav-home');\n  });\n\n  document.getElementById('nav-harmo').addEventListener('click', () => {\n    showSection('.harmonisation-container');\n    setActiveNav('nav-harmo');\n  });\n\n  // Initialisation du système d'aide\n  const showHelpBtn = document.getElementById('show-help-btn');\n  const helpModal = document.getElementById('help-modal');\n  const closeHelpBtn = document.getElementById('close-help-modal');\n\n  if (showHelpBtn && helpModal && closeHelpBtn) {\n    showHelpBtn.onclick = function() {\n      helpModal.style.display = 'block';\n    };\n\n    closeHelpBtn.onclick = function() {\n      helpModal.style.display = 'none';\n    };\n\n    // Fermer la modale si on clique en dehors\n    window.onclick = function(event) {\n      if (event.target === helpModal) {\n        helpModal.style.display = 'none';\n      }\n    };\n  }\n\n  let selectedColumnRange = null;\n  let lastHarmonisation = null; // Pour undo\n\n  // Sélection de la colonne à harmoniser\n  const selectColumnBtn = document.getElementById('select-column-btn');\n  if (selectColumnBtn) {\n    selectColumnBtn.onclick = async function() {\n      await Excel.run(async (context) => {\n        const range = context.workbook.getSelectedRange();\n        range.load([\"columnIndex\", \"rowCount\", \"columnCount\", \"address\"]);\n        await context.sync();\n        \n        if (range.columnCount !== 1) {\n          showGlobalMsg(\"Veuillez sélectionner une seule colonne.\", 'error');\n          return;\n        }\n        window.selectedColumnRange = range.address;\n        selectColumnBtn.textContent = `Colonne sélectionnée : ${range.address}`;\n        updateHarmoStatus();\n      });\n    };\n  } else { console.warn('select-column-btn manquant'); }\n\n  // Chargement du fichier BDD d'harmonisation\n  const loadBddBtn = document.getElementById('load-bdd-btn');\n  if (loadBddBtn) {\n    loadBddBtn.onclick = function() {\n      const bddFileInput = document.getElementById('bdd-file-input');\n      if (bddFileInput) {\n        console.log('Ouverture explorateur de fichiers BDD');\n        showGlobalMsg('Ouverture de l\\'explorateur de fichiers...', 'info');\n        bddFileInput.click();\n      } else {\n        showGlobalMsg('Erreur : input file BDD introuvable.', 'error');\n        console.warn('bdd-file-input manquant');\n      }\n    };\n  } else { console.warn('load-bdd-btn manquant'); }\n\n  const bddFileInput = document.getElementById('bdd-file-input');\n  if (bddFileInput) {\n    bddFileInput.onchange = function(e) {\n      const file = e.target.files[0];\n      if (!file) return;\n      if (getCurrentBddFilename() === file.name) {\n        showGlobalMsg('Ce fichier est déjà chargé.', 'info');\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = function(evt) {\n        const data = new Uint8Array(evt.target.result);\n        const bddWorkbook = XLSX.read(data, { type: 'array' });\n        Office.context.document.settings.set('bddWorkbookData', Array.from(data));\n        Office.context.document.settings.set('bddWorkbookName', file.name);\n        Office.context.document.settings.saveAsync();\n        window.bddFilename = file.name;\n        updateHarmoStatus();\n        const themeSelect = document.getElementById('theme-select');\n        if (themeSelect) {\n          themeSelect.innerHTML = '';\n          bddWorkbook.SheetNames.forEach(name => {\n            const option = document.createElement('option');\n            option.value = name;\n            option.textContent = name;\n            themeSelect.appendChild(option);\n          });\n        } else { console.warn('theme-select manquant'); }\n        const themeSection = document.getElementById('theme-section');\n        if (themeSection) themeSection.style.display = 'block';\n        const harmonizeBtn = document.getElementById('harmonize-btn');\n        if (harmonizeBtn) harmonizeBtn.style.display = 'inline-block';\n        const filenameSpan = document.getElementById('bdd-filename');\n        if (filenameSpan) {\n          filenameSpan.textContent = `Fichier chargé : ${file.name}`;\n          filenameSpan.style.display = 'inline';\n        } else { console.warn('bdd-filename manquant'); }\n        if (loadBddBtn) loadBddBtn.textContent = 'Changer de BDD';\n        updateMappingTable();\n      };\n      reader.readAsArrayBuffer(file);\n    };\n  } else { console.warn('bdd-file-input manquant'); }\n\n  // Affichage dynamique de la table des mappings du thème sélectionné\n  const themeSelect = document.getElementById('theme-select');\n  if (themeSelect) {\n    themeSelect.onchange = function() {\n      updateMappingTable();\n    };\n  } else { console.warn('theme-select manquant'); }\n\n  // Fonction Jaro-Winkler pour la similarité\n  function jaroWinkler(s1, s2) {\n    if (!s1 || !s2) return 0;\n    s1 = s1.toString();\n    s2 = s2.toString();\n    \n    // Fonction Jaro\n    function jaro(str1, str2) {\n      if (str1 === str2) return 1;\n      \n      const len1 = str1.length;\n      const len2 = str2.length;\n      \n      // Distance maximale de correspondance\n      const matchDistance = Math.floor(Math.max(len1, len2) / 2) - 1;\n      \n      const matches1 = new Array(len1).fill(false);\n      const matches2 = new Array(len2).fill(false);\n      \n      // Nombre de correspondances\n      let matches = 0;\n      \n      // Recherche des correspondances\n      for (let i = 0; i < len1; i++) {\n        const start = Math.max(0, i - matchDistance);\n        const end = Math.min(i + matchDistance + 1, len2);\n        \n        for (let j = start; j < end; j++) {\n          if (!matches2[j] && str1[i] === str2[j]) {\n            matches1[i] = true;\n            matches2[j] = true;\n            matches++;\n            break;\n          }\n        }\n      }\n      \n      if (matches === 0) return 0;\n      \n      // Compte les transpositions\n      let t = 0;\n      let point = 0;\n      \n      for (let i = 0; i < len1; i++) {\n        if (!matches1[i]) continue;\n        \n        while (!matches2[point]) point++;\n        \n        if (str1[i] !== str2[point]) t++;\n        point++;\n      }\n      \n      t = Math.floor(t/2);\n      \n      return ((matches / len1) +\n              (matches / len2) +\n              ((matches - t) / matches)) / 3;\n    }\n    \n    const jaroScore = jaro(s1, s2);\n    \n    // Calcul du préfixe commun (max 4 caractères)\n    let prefix = 0;\n    const maxPrefix = 4;\n    \n    for (let i = 0; i < Math.min(s1.length, s2.length, maxPrefix); i++) {\n      if (s1[i] === s2[i]) prefix++;\n      else break;\n    }\n    \n    // Formule Jaro-Winkler\n    return jaroScore + (prefix * 0.1 * (1 - jaroScore));\n  }\n\n  // Filtrage dynamique sur la recherche\n  const searchMapping = document.getElementById('search-mapping');\n  if (searchMapping) {\n    searchMapping.oninput = function(e) {\n      const search = e.target.value.toLowerCase();\n      const theme = themeSelect ? themeSelect.value : null;\n      const bddWorkbook = getCurrentBddWorkbook();\n      if (!bddWorkbook || !theme) return;\n      const sheet = bddWorkbook.Sheets[theme];\n      const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n      const tbody = document.querySelector('#mapping-table tbody');\n      if (tbody) {\n        tbody.innerHTML = '';\n        \n        // Si la recherche est vide, afficher toute la BDD\n        if (!search) {\n          for (let i = 1; i < data.length; i++) {\n            if (!data[i]) continue;\n            const tr = document.createElement('tr');\n            tr.innerHTML = `<td>${data[i][0] || ''}</td><td>${data[i][1] || ''}</td><td></td>`;\n            tbody.appendChild(tr);\n          }\n          return;\n        }\n\n        // Préparer les données pour la recherche\n        const searchResults = [];\n        for (let i = 1; i < data.length; i++) {\n          if (!data[i] || !data[i][0]) continue;\n          \n          const brut = (data[i][0] || '').toString();\n          const harm = (data[i][1] || '').toString();\n          const brutNorm = normaliserTexte(brut);\n          const searchNorm = normaliserTexte(search);\n          \n          // Calculer les scores de similarité\n          const scoreLev = similarity(searchNorm, brutNorm);\n          const scoreJW = jaroWinkler(searchNorm, brutNorm);\n          const score = Math.round((0.5 * scoreLev + 0.5 * scoreJW) * 100);\n          \n          if (score >= 40 || brut.toLowerCase().includes(search) || harm.toLowerCase().includes(search)) {\n            searchResults.push({\n              brut,\n              harm,\n              score\n            });\n          }\n        }\n\n        // Trier par score décroissant\n        searchResults.sort((a, b) => b.score - a.score);\n\n        // Afficher les résultats\n        searchResults.forEach(result => {\n          const tr = document.createElement('tr');\n          tr.innerHTML = `\n            <td>${result.brut}</td>\n            <td class=\"apres-cell\">${result.harm}</td>\n          `;\n          tbody.appendChild(tr);\n        });\n      } else { console.warn('mapping-table tbody manquant'); }\n    };\n  } else { console.warn('search-mapping manquant'); }\n\n  /**\n   * Étape 0 — Chargement des données : colonne brute et référentiel\n   */\n  async function loadHarmonisationData() {\n    if (!window.selectedColumnRange) {\n      showGlobalMsg('Veuillez sélectionner une colonne et charger la BDD.', 'error');\n      return null;\n    }\n    const bddWorkbook = getCurrentBddWorkbook();\n    if (!bddWorkbook) {\n      showGlobalMsg('Veuillez sélectionner une colonne et charger la BDD.', 'error');\n      return null;\n    }\n    const theme = document.getElementById('theme-select').value;\n    const sheet = bddWorkbook.Sheets[theme];\n    if (!sheet) {\n      showGlobalMsg('Thème non trouvé dans la BDD.', 'error');\n      return null;\n    }\n    // Extraction du référentiel (tableau d'objets)\n    const referentiel = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n    // Lecture des valeurs de la colonne brute sélectionnée\n    let values = [];\n    await Excel.run(async (context) => {\n      const range = context.workbook.worksheets.getActiveWorksheet().getRange(window.selectedColumnRange);\n      range.load([\"values\", \"rowCount\"]);\n      await context.sync();\n      \n      if (!range.values || !Array.isArray(range.values)) {\n        showGlobalMsg('La sélection est vide ou invalide. Veuillez sélectionner une colonne contenant des données.', 'error');\n        values = [];\n        return;\n      }\n      values = range.values.map(row => row[0]);\n    });\n    return { values, referentiel, theme, sheet };\n  }\n\n  /**\n   * Étape 1 — Nettoyage (normalisation des textes)\n   * Convertit une chaîne en majuscules, supprime accents, caractères spéciaux, espaces multiples.\n   */\n  function normaliserTexte(str) {\n    if (!str || typeof str !== 'string') return '';\n    let s = str.normalize('NFD').replace(/\\u0300-\\u036F/g, ''); // accents\n    s = s.toUpperCase();\n    s = s.replace(/[^A-Z0-9 ]/g, ' '); // caractères spéciaux\n    s = s.replace(/\\s+/g, ' ').trim(); // espaces multiples\n    return s;\n  }\n  window.normaliserTexte = normaliserTexte;\n\n  // Affichage d'un message global (erreur/info)\n  function showGlobalMsg(msg, type = 'info') {\n    const el = document.getElementById('global-msg');\n    el.textContent = msg;\n    el.style.display = 'block';\n    el.style.background = type === 'error' ? '#fff1f0' : '#fffbe6';\n    el.style.color = type === 'error' ? '#a8071a' : '#b36b00';\n    el.style.border = type === 'error' ? '1px solid #ffa39e' : '1px solid #ffe58f';\n    setTimeout(() => { el.style.display = 'none'; }, 4000);\n  }\n  window.showGlobalMsg = showGlobalMsg;\n\n  // Sécuriser l'attachement du handler sur le bouton Harmoniser\n  const harmonizeBtn = document.getElementById('harmonize-btn');\n  if (harmonizeBtn) {\n    harmonizeBtn.onclick = async function() {\n      console.log('DEBUG Harmoniser:', 'selectedColumnRange=', window.selectedColumnRange, 'bddFilename=', window.bddFilename);\n      const selectedColumnRange = window.selectedColumnRange;\n      async function loadHarmonisationData() {\n        if (!window.selectedColumnRange) {\n          showGlobalMsg('Veuillez sélectionner une colonne et charger la BDD.', 'error');\n          return null;\n        }\n        const bddWorkbook = getCurrentBddWorkbook();\n        if (!bddWorkbook) {\n          showGlobalMsg('Veuillez sélectionner une colonne et charger la BDD.', 'error');\n          return null;\n        }\n        const theme = document.getElementById('theme-select').value;\n        const sheet = bddWorkbook.Sheets[theme];\n        if (!sheet) {\n          showGlobalMsg('Thème non trouvé dans la BDD.', 'error');\n          return null;\n        }\n        // Extraction du référentiel (tableau d'objets)\n        const referentiel = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n        // Lecture des valeurs de la colonne brute sélectionnée\n        let values = [];\n        await Excel.run(async (context) => {\n          const range = context.workbook.worksheets.getActiveWorksheet().getRange(window.selectedColumnRange);\n          range.load([\"values\", \"rowCount\"]);\n          await context.sync();\n          if (!range.values || !Array.isArray(range.values)) {\n            showGlobalMsg('La sélection est vide ou invalide. Veuillez sélectionner une colonne contenant des données.', 'error');\n            values = [];\n            return;\n          }\n          values = range.values.map(row => row[0]);\n        });\n        return { values, referentiel, theme, sheet };\n      }\n      const dataLoaded = await loadHarmonisationData();\n      if (!dataLoaded) return;\n      const { values, referentiel, theme, sheet } = dataLoaded;\n      // Étape 1 : Nettoyage des valeurs brutes\n      const textesNettoyes = values.map(normaliserTexte);\n      // Extraction du mapping brut -> harmonisé (et brut nettoyé)\n      const mapping = {};\n      const mappingNettoye = {};\n      referentiel.forEach(row => {\n        if (row[0] !== undefined && row[1] !== undefined) {\n          mapping[row[0]] = row[1];\n          mappingNettoye[normaliserTexte(row[0])] = row[1];\n        }\n      });\n      // Étape 2 : Recherche exacte dans le référentiel sur les textes nettoyés\n      const harmonisationRows = [];\n      for (let i = 0; i < values.length; i++) {\n        const brut = values[i];\n        const texteNettoye = textesNettoyes[i];\n        let apres = '';\n        let source = '';\n        if (mappingNettoye.hasOwnProperty(texteNettoye)) {\n          apres = mappingNettoye[texteNettoye];\n          source = 'BDD exacte';\n        } else {\n          apres = '';\n          source = 'Non trouvé';\n        }\n        harmonisationRows.push({avant: brut, apres, source, texteNettoye});\n      }\n      // Étape 3 : Matching flou (suggestion intelligente)\n      function levenshtein(a, b) {\n        if (a.length === 0) return b.length;\n        if (b.length === 0) return a.length;\n        const matrix = [];\n        for (let i = 0; i <= b.length; i++) matrix[i] = [i];\n        for (let j = 0; j <= a.length; j++) matrix[0][j] = j;\n        for (let i = 1; i <= b.length; i++) {\n          for (let j = 1; j <= a.length; j++) {\n            if (b.charAt(i - 1) === a.charAt(j - 1)) {\n              matrix[i][j] = matrix[i - 1][j - 1];\n            } else {\n              matrix[i][j] = Math.min(\n                matrix[i - 1][j - 1] + 1, // substitution\n                matrix[i][j - 1] + 1,     // insertion\n                matrix[i - 1][j] + 1      // deletion\n              );\n            }\n          }\n        }\n        return matrix[b.length][a.length];\n      }\n      function similarity(a, b) {\n        if (!a && !b) return 1;\n        if (!a || !b) return 0;\n        const dist = levenshtein(a, b);\n        return 1 - dist / Math.max(a.length, b.length);\n      }\n      // Préparer la liste des bruts nettoyés du référentiel\n      const referentielBrutsNettoyes = referentiel.slice(1).map(row => ({\n        brut: row[0],\n        nettoye: normaliserTexte(row[0]),\n        harmonise: row[1]\n      }));\n      harmonisationRows.forEach(row => {\n        if (row.source === 'Non trouvé' && row.texteNettoye) {\n          // Calculer similarité avec tous les bruts nettoyés du référentiel\n          let suggestions = referentielBrutsNettoyes.map(ref => {\n            const scoreLev = similarity(row.texteNettoye, ref.nettoye);\n            const scoreJW = jaroWinkler(row.texteNettoye, ref.nettoye);\n            const score = 0.5 * scoreLev + 0.5 * scoreJW;\n            return {\n              brut: ref.brut,\n              harmonise: ref.harmonise,\n              score: Math.round(score * 100),\n              scoreRaw: score\n            };\n          })\n          .filter(s => s.score >= (window.similarityThreshold || 60))\n          .sort((a, b) => b.score - a.score)\n          .slice(0, 3); // Limiter à 3 suggestions\n          // Si aucune suggestion >= seuil, proposer quand même la meilleure\n          if (suggestions.length === 0) {\n            suggestions = referentielBrutsNettoyes.map(ref => {\n              const scoreLev = similarity(row.texteNettoye, ref.nettoye);\n              const scoreJW = jaroWinkler(row.texteNettoye, ref.nettoye);\n              const score = 0.5 * scoreLev + 0.5 * scoreJW;\n              return {\n                brut: ref.brut,\n                harmonise: ref.harmonise,\n                score: Math.round(score * 100),\n                scoreRaw: score\n              };\n            })\n            .sort((a, b) => b.score - a.score)\n            .slice(0, 1);\n          }\n          // Si une seule suggestion et pas encore de valeur harmonisée, l'appliquer automatiquement\n          if (suggestions.length === 1 && !row.apres) {\n            row.apres = suggestions[0].harmonise;\n            row.source = 'Suggestion unique';\n          }\n          row.suggestions = suggestions;\n        } else {\n          row.suggestions = [];\n        }\n      });\n      // La suite du pipeline utilisera harmonisationRows avec suggestions\n      // ... (étape 4 à venir)\n      // Statistiques de fin\n      const total = harmonisationRows.length;\n      const exact = harmonisationRows.filter(r => r.source === 'BDD exacte').length;\n      const suggestion = harmonisationRows.filter(r => r.source === 'Suggestion').length;\n      const manuel = harmonisationRows.filter(r => r.source === 'Manuel').length;\n      const nonTrouve = harmonisationRows.filter(r => !r.apres || r.apres === r.avant).length;\n      const couverture = Math.round(((total - nonTrouve) / total) * 100);\n      // Affichage persistant dans la zone stats\n      const statsDiv = document.getElementById('harmonisation-stats');\n      const statsContent = document.getElementById('harmonisation-stats-content');\n      if (statsDiv && statsContent) {\n        statsContent.innerHTML =\n          `<b>Statistiques d'harmonisation :</b><br>` +\n          `Lignes traitées : <b>${total}</b><br>` +\n          `Correspondances exactes : <b>${exact}</b><br>` +\n          `Suggestions utilisées : <b>${suggestion}</b><br>` +\n          `Validations manuelles : <b>${manuel}</b><br>` +\n          `Non harmonisées : <b>${nonTrouve}</b><br>` +\n          `Taux de couverture : <b>${couverture}%</b>`;\n        statsDiv.style.display = 'block';\n      }\n      // Handler pour masquer la zone stats\n      const closeStats = document.getElementById('close-stats');\n      if (closeStats && statsDiv) {\n        closeStats.onclick = function() { statsDiv.style.display = 'none'; };\n      }\n      showHarmonisationModal(harmonisationRows, selectedColumnRange, theme);\n      if (typeof window.harmonisationMain === 'function') {\n        window.harmonisationMain(dataLoaded, window.selectedColumnRange);\n      } else {\n        // Fallback : logique inline\n      }\n      // Générer la colonne harmonisée classique (doublons autorisés)\n      // Correction : garantir unicité d'harmonisation par valeur brute normalisée\n      const harmonisationMemo = {};\n      const harmonisedResults = textesNettoyes.map((norm, i) => {\n        if (norm in harmonisationMemo) {\n          return harmonisationMemo[norm];\n        }\n        const val = harmonisationRows[i].apres;\n        harmonisationMemo[norm] = val;\n        return val;\n      });\n      // Vérification stricte de la sélection (1 colonne)\n      await Excel.run(async (context) => {\n        const range = context.workbook.worksheets.getActiveWorksheet().getRange(selectedColumnRange);\n        range.load([\"rowCount\", \"columnCount\", \"columnIndex\"]);\n        await context.sync();\n        \n        const colCount = range.columnCount;\n        const rowCount = range.rowCount;\n        const colIndex = range.columnIndex;\n        \n        if (colCount !== 1) {\n          showGlobalMsg('Veuillez sélectionner une seule colonne.', 'error');\n          return;\n        }\n        \n        // Correction stricte : ne garder qu'une seule fois chaque valeur harmonisée unique (après normalisation), liste compacte\n        const dejaVu = new Set();\n        const uniqueResults = [];\n        for (let i = 0; i < rowCount; i++) {\n          const norm = textesNettoyes[i];\n          const val = harmonisedResults[i] !== undefined && harmonisedResults[i] !== null ? harmonisedResults[i] : '';\n          if (norm && !dejaVu.has(norm) && val !== '') {\n            uniqueResults.push([val]);\n            dejaVu.add(norm);\n          }\n        }\n        \n        // Compléter avec des vides pour garder la même taille que la plage cible\n        while (uniqueResults.length < rowCount) uniqueResults.push(['']);\n        const resultArray = uniqueResults;\n        \n        // Ajustement de la taille du tableau pour correspondre à la plage cible\n        const destRange = range.getOffsetRange(0, 1).getResizedRange(rowCount - 1, 0);\n        destRange.load([\"rowCount\", \"columnCount\"]);\n        await context.sync();\n        \n        const destRows = destRange.rowCount;\n        const destCols = destRange.columnCount;\n        \n        if (resultArray.length !== destRows) {\n          while (resultArray.length < destRows) resultArray.push(Array(destRange.columnCount).fill(''));\n          if (resultArray.length > destRows) resultArray = resultArray.slice(0, destRows);\n        }\n        \n        if (resultArray[0] && resultArray[0].length !== destRange.columnCount) {\n          resultArray = resultArray.map(row => {\n            let r = row.slice(0, destRange.columnCount);\n            while (r.length < destRange.columnCount) r.push('');\n            return r;\n          });\n        }\n        \n        destRange.values = resultArray;\n        await context.sync();\n      });\n    };\n  }\n\n  // Télécharger la BDD modifiée\n  document.getElementById('download-bdd-btn').onclick = function() {\n    const bddWorkbook = getCurrentBddWorkbook();\n    if (!bddWorkbook) return;\n    const wbout = XLSX.write(bddWorkbook, { bookType: 'xlsx', type: 'array' });\n    const blob = new Blob([wbout], { type: 'application/octet-stream' });\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.download = getCurrentBddFilename() ? getCurrentBddFilename().replace(/\\.xlsx?$/, '_modifie.xlsx') : 'bdd_harmonisation.xlsx';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  // Undo harmonisation\n  document.getElementById('undo-harmonisation-btn').onclick = async function() {\n    if (!lastHarmonisation) return;\n    await Excel.run(async (context) => {\n      const range = context.workbook.worksheets.getActiveWorksheet().getRange(lastHarmonisation.address);\n      // Correction systématique : ajustement de la taille du tableau pour correspondre à la plage cible\n      if (lastHarmonisation.values.length !== range.rowCount) {\n        while (lastHarmonisation.values.length < range.rowCount) lastHarmonisation.values.push(Array(range.columnCount).fill(''));\n        if (lastHarmonisation.values.length > range.rowCount) lastHarmonisation.values = lastHarmonisation.values.slice(0, range.rowCount);\n      }\n      if (lastHarmonisation.values[0] && lastHarmonisation.values[0].length !== range.columnCount) {\n        lastHarmonisation.values = lastHarmonisation.values.map(row => {\n          let r = row.slice(0, range.columnCount);\n          while (r.length < range.columnCount) r.push('');\n          return r;\n        });\n      }\n      range.values = lastHarmonisation.values;\n      await context.sync();\n    });\n    document.getElementById('undo-harmonisation-btn').style.display = 'none';\n    lastHarmonisation = null;\n  };\n\n  // Outils pratiques Excel\n  function showToolMsg(msg) {\n    document.getElementById('tool-result-msg').textContent = msg;\n    setTimeout(() => { document.getElementById('tool-result-msg').textContent = ''; }, 3500);\n  }\n\n\n\n\n\n\n\n  safeOnClick('tool-unique-list', async function() {\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load('values');\n      await context.sync();\n      const uniques = Array.from(new Set(range.values.map(row => row[0])));\n      range.values = uniques.map(v => [v]);\n      await context.sync();\n      showToolMsg('Liste unique générée dans la sélection.');\n    });\n  });\n\n\n\n\n\n\n\n\n\n  safeOnClick('tool-find-replace', async function() {\n    const search = prompt('Texte à rechercher :', '');\n    if (search === null || search === '') return;\n    const replace = prompt('Remplacer par :', '');\n    if (replace === null) return;\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load('values');\n      await context.sync();\n      range.values = range.values.map(row => [String(row[0]).split(search).join(replace)]);\n      await context.sync();\n      showToolMsg('Remplacement effectué.');\n    });\n  });\n\n  safeOnClick('tool-count-unique', async function() {\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load('values');\n      await context.sync();\n      const uniques = new Set(range.values.map(row => row[0]));\n      showToolMsg(`Valeurs uniques : ${uniques.size}`);\n    });\n  });\n\n\n\n  safeOnClick('tool-count-occurrences', async function() {\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load([\"values\", \"rowCount\", \"columnCount\"]);\n      await context.sync();\n      \n      const counts = {};\n      range.values.forEach(row => {\n        const v = row[0];\n        counts[v] = (counts[v] || 0) + 1;\n      });\n      const msg = Object.entries(counts).map(([val, n]) => `${val} : ${n}`).join(' | ');\n      showToolMsg('Occurrences : ' + msg);\n    });\n  });\n\n  safeOnClick('tool-quick-stats', async function() {\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load([\"values\", \"rowCount\", \"columnCount\"]);\n      await context.sync();\n      \n      const nums = range.values.map(row => parseFloat(row[0])).filter(x => !isNaN(x));\n      if (nums.length === 0) { showToolMsg('Aucune valeur numérique.'); return; }\n      nums.sort((a, b) => a - b);\n      const min = nums[0];\n      const max = nums[nums.length - 1];\n      const avg = (nums.reduce((a, b) => a + b, 0) / nums.length).toFixed(2);\n      const median = nums.length % 2 === 0 ? ((nums[nums.length/2-1]+nums[nums.length/2])/2).toFixed(2) : nums[Math.floor(nums.length/2)];\n      showToolMsg(`Min: ${min} | Max: ${max} | Moy: ${avg} | Med: ${median}`);\n    });\n  });\n\n\n\n  safeOnClick('tool-search-highlight', async function() {\n    const search = prompt('Texte à rechercher :', '');\n    if (!search) return;\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load([\"values\", \"rowCount\", \"columnCount\"]);\n      await context.sync();\n      \n      const highlight = range.format.fill;\n      for (let i = 0; i < range.values.length; i++) {\n        if (String(range.values[i][0]).includes(search)) {\n          range.getCell(i, 0).format.fill.color = '#ffe599';\n        }\n      }\n      await context.sync();\n      showToolMsg('Occurrences surlignées.');\n    });\n  });\n\n  safeOnClick('tool-replace-quick', async function() {\n    const search = prompt('Texte à rechercher :', '');\n    if (!search) return;\n    const replace = prompt('Remplacer par :', '');\n    if (replace === null) return;\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load([\"values\", \"rowCount\", \"columnCount\"]);\n      await context.sync();\n      \n      range.values = range.values.map(row => [String(row[0]).split(search).join(replace)]);\n      await context.sync();\n      showToolMsg('Remplacement rapide effectué.');\n    });\n  });\n\n  safeOnClick('tool-highlight-duplicates', async function() {\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load([\"values\", \"rowCount\", \"columnCount\"]);\n      await context.sync();\n      \n      const seen = new Set();\n      for (let i = 0; i < range.values.length; i++) {\n        const val = range.values[i][0];\n        if (seen.has(val)) {\n          range.getCell(i, 0).format.fill.color = '#f4cccc';\n        } else {\n          seen.add(val);\n        }\n      }\n      await context.sync();\n      showToolMsg('Doublons détectés et surlignés.');\n    });\n  });\n\n\n\n\n\n  // Réagir au changement de thème\n  if (Office && Office.context && Office.context.officeTheme && Office.context.officeTheme.addHandlerAsync) {\n    Office.context.officeTheme.addHandlerAsync('officeThemeChanged', applyOfficeThemeColor);\n  }\n\n  // Au chargement de la page, masquer la modale\n  window.addEventListener('DOMContentLoaded', function() {\n    const modal = document.getElementById('modal-harmonisation');\n    if (modal) modal.style.display = 'none';\n    // Attacher le handler de fermeture de la modale (croix)\n    const closeBtn = document.getElementById('close-modal');\n    if (closeBtn) {\n      closeBtn.onclick = function() {\n        document.getElementById('modal-harmonisation').style.display = 'none';\n      };\n    }\n    // Attacher les handlers de navigation de façon centralisée\n    safeOnClick('nav-home', function() {\n      showSection('.welcome-panel');\n      setActiveNav('nav-home');\n    });\n    safeOnClick('nav-harmo', function() {\n      showSection('.harmonisation-container');\n      setActiveNav('nav-harmo');\n    });\n\n    \n    // Attacher les handlers harmonisation dès le chargement du DOM\n    const selectColumnBtn = document.getElementById('select-column-btn');\n    if (selectColumnBtn) {\n      selectColumnBtn.onclick = async function() {\n        await Excel.run(async (context) => {\n          const range = context.workbook.getSelectedRange();\n          range.load([\"columnIndex\", \"rowCount\", \"columnCount\", \"address\"]);\n          await context.sync();\n          if (range.columnCount !== 1) {\n            showGlobalMsg(\"Veuillez sélectionner une seule colonne.\", 'error');\n            return;\n          }\n          window.selectedColumnRange = range.address;\n          selectColumnBtn.textContent = `Colonne sélectionnée : ${range.address}`;\n          updateHarmoStatus();\n        });\n      };\n    }\n    const loadBddBtn = document.getElementById('load-bdd-btn');\n    if (loadBddBtn) {\n      loadBddBtn.onclick = function() {\n        const bddFileInput = document.getElementById('bdd-file-input');\n        if (bddFileInput) {\n          console.log('Ouverture explorateur de fichiers BDD');\n          showGlobalMsg('Ouverture de l\\'explorateur de fichiers...', 'info');\n          bddFileInput.click();\n        } else {\n          showGlobalMsg('Erreur : input file BDD introuvable.', 'error');\n          console.warn('bdd-file-input manquant');\n        }\n      };\n    }\n    const harmonizeBtn = document.getElementById('harmonize-btn');\n    if (harmonizeBtn) {\n      harmonizeBtn.onclick = async function() {\n        console.log('DEBUG Harmoniser:', 'selectedColumnRange=', window.selectedColumnRange, 'bddFilename=', window.bddFilename);\n        const selectedColumnRange = window.selectedColumnRange;\n        async function loadHarmonisationData() {\n          if (!window.selectedColumnRange) {\n            showGlobalMsg('Veuillez sélectionner une colonne et charger la BDD.', 'error');\n            return null;\n          }\n          const bddWorkbook = getCurrentBddWorkbook();\n          if (!bddWorkbook) {\n            showGlobalMsg('Veuillez sélectionner une colonne et charger la BDD.', 'error');\n            return null;\n          }\n          const theme = document.getElementById('theme-select').value;\n          const sheet = bddWorkbook.Sheets[theme];\n          if (!sheet) {\n            showGlobalMsg('Thème non trouvé dans la BDD.', 'error');\n            return null;\n          }\n          // Extraction du référentiel (tableau d'objets)\n          const referentiel = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n          // Lecture des valeurs de la colonne brute sélectionnée\n          let values = [];\n          await Excel.run(async (context) => {\n            const range = context.workbook.worksheets.getActiveWorksheet().getRange(window.selectedColumnRange);\n            range.load([\"values\", \"rowCount\"]);\n            await context.sync();\n            if (!range.values || !Array.isArray(range.values)) {\n              showGlobalMsg('La sélection est vide ou invalide. Veuillez sélectionner une colonne contenant des données.', 'error');\n              values = [];\n              return;\n            }\n            values = range.values.map(row => row[0]);\n          });\n          return { values, referentiel, theme, sheet };\n        }\n        const dataLoaded = await loadHarmonisationData();\n        if (!dataLoaded) return;\n        const { values, referentiel, theme, sheet } = dataLoaded;\n        // Étape 1 : Nettoyage des valeurs brutes\n        const textesNettoyes = values.map(normaliserTexte);\n        // Extraction du mapping brut -> harmonisé (et brut nettoyé)\n        const mapping = {};\n        const mappingNettoye = {};\n        referentiel.forEach(row => {\n          if (row[0] !== undefined && row[1] !== undefined) {\n            mapping[row[0]] = row[1];\n            mappingNettoye[normaliserTexte(row[0])] = row[1];\n          }\n        });\n        // Étape 2 : Recherche exacte dans le référentiel sur les textes nettoyés\n        const harmonisationRows = [];\n        for (let i = 0; i < values.length; i++) {\n          const brut = values[i];\n          const texteNettoye = textesNettoyes[i];\n          let apres = '';\n          let source = '';\n          if (mappingNettoye.hasOwnProperty(texteNettoye)) {\n            apres = mappingNettoye[texteNettoye];\n            source = 'BDD exacte';\n          } else {\n            apres = '';\n            source = 'Non trouvé';\n          }\n          harmonisationRows.push({avant: brut, apres, source, texteNettoye});\n        }\n        // Étape 3 : Matching flou (suggestion intelligente)\n        function levenshtein(a, b) {\n          if (a.length === 0) return b.length;\n          if (b.length === 0) return a.length;\n          const matrix = [];\n          for (let i = 0; i <= b.length; i++) matrix[i] = [i];\n          for (let j = 0; j <= a.length; j++) matrix[0][j] = j;\n          for (let i = 1; i <= b.length; i++) {\n            for (let j = 1; j <= a.length; j++) {\n              if (b.charAt(i - 1) === a.charAt(j - 1)) {\n                matrix[i][j] = matrix[i - 1][j - 1];\n              } else {\n                matrix[i][j] = Math.min(\n                  matrix[i - 1][j - 1] + 1, // substitution\n                  matrix[i][j - 1] + 1,     // insertion\n                  matrix[i - 1][j] + 1      // deletion\n                );\n              }\n            }\n          }\n          return matrix[b.length][a.length];\n        }\n        function similarity(a, b) {\n          if (!a && !b) return 1;\n          if (!a || !b) return 0;\n          const dist = levenshtein(a, b);\n          return 1 - dist / Math.max(a.length, b.length);\n        }\n        // Préparer la liste des bruts nettoyés du référentiel\n        const referentielBrutsNettoyes = referentiel.slice(1).map(row => ({\n          brut: row[0],\n          nettoye: normaliserTexte(row[0]),\n          harmonise: row[1]\n        }));\n        harmonisationRows.forEach(row => {\n          if (row.source === 'Non trouvé' && row.texteNettoye) {\n            // Calculer similarité avec tous les bruts nettoyés du référentiel\n            let suggestions = referentielBrutsNettoyes.map(ref => {\n              const scoreLev = similarity(row.texteNettoye, ref.nettoye);\n              const scoreJW = jaroWinkler(row.texteNettoye, ref.nettoye);\n              const score = 0.5 * scoreLev + 0.5 * scoreJW;\n              return {\n                brut: ref.brut,\n                harmonise: ref.harmonise,\n                score: Math.round(score * 100),\n                scoreRaw: score\n              };\n            })\n            .filter(s => s.score >= (window.similarityThreshold || 60))\n            .sort((a, b) => b.score - a.score)\n            .slice(0, 3); // Limiter à 3 suggestions\n            // Si aucune suggestion >= seuil, proposer quand même la meilleure\n            if (suggestions.length === 0) {\n              suggestions = referentielBrutsNettoyes.map(ref => {\n                const scoreLev = similarity(row.texteNettoye, ref.nettoye);\n                const scoreJW = jaroWinkler(row.texteNettoye, ref.nettoye);\n                const score = 0.5 * scoreLev + 0.5 * scoreJW;\n                return {\n                  brut: ref.brut,\n                  harmonise: ref.harmonise,\n                  score: Math.round(score * 100),\n                  scoreRaw: score\n                };\n              })\n              .sort((a, b) => b.score - a.score)\n              .slice(0, 1);\n            }\n            // Si une seule suggestion et pas encore de valeur harmonisée, l'appliquer automatiquement\n            if (suggestions.length === 1 && !row.apres) {\n              row.apres = suggestions[0].harmonise;\n              row.source = 'Suggestion unique';\n            }\n            row.suggestions = suggestions;\n          } else {\n            row.suggestions = [];\n          }\n        });\n        // La suite du pipeline utilisera harmonisationRows avec suggestions\n        // ... (étape 4 à venir)\n        // Statistiques de fin\n        const total = harmonisationRows.length;\n        const exact = harmonisationRows.filter(r => r.source === 'BDD exacte').length;\n        const suggestion = harmonisationRows.filter(r => r.source === 'Suggestion').length;\n        const manuel = harmonisationRows.filter(r => r.source === 'Manuel').length;\n        const nonTrouve = harmonisationRows.filter(r => !r.apres || r.apres === r.avant).length;\n        const couverture = Math.round(((total - nonTrouve) / total) * 100);\n        // Affichage persistant dans la zone stats\n        const statsDiv = document.getElementById('harmonisation-stats');\n        const statsContent = document.getElementById('harmonisation-stats-content');\n        if (statsDiv && statsContent) {\n          statsContent.innerHTML =\n            `<b>Statistiques d'harmonisation :</b><br>` +\n            `Lignes traitées : <b>${total}</b><br>` +\n            `Correspondances exactes : <b>${exact}</b><br>` +\n            `Suggestions utilisées : <b>${suggestion}</b><br>` +\n            `Validations manuelles : <b>${manuel}</b><br>` +\n            `Non harmonisées : <b>${nonTrouve}</b><br>` +\n            `Taux de couverture : <b>${couverture}%</b>`;\n          statsDiv.style.display = 'block';\n        }\n        // Handler pour masquer la zone stats\n        const closeStats = document.getElementById('close-stats');\n        if (closeStats && statsDiv) {\n          closeStats.onclick = function() { statsDiv.style.display = 'none'; };\n        }\n        showHarmonisationModal(harmonisationRows, selectedColumnRange, theme);\n        if (typeof window.harmonisationMain === 'function') {\n          window.harmonisationMain(dataLoaded, window.selectedColumnRange);\n        } else {\n          // Fallback : logique inline\n        }\n        // Générer la colonne harmonisée classique (doublons autorisés)\n        // Correction : garantir unicité d'harmonisation par valeur brute normalisée\n        const harmonisationMemo = {};\n        const harmonisedResults = textesNettoyes.map((norm, i) => {\n          if (norm in harmonisationMemo) {\n            return harmonisationMemo[norm];\n          }\n          const val = harmonisationRows[i].apres;\n          harmonisationMemo[norm] = val;\n          return val;\n        });\n        // Vérification stricte de la sélection (1 colonne)\n        await Excel.run(async (context) => {\n          const range = context.workbook.worksheets.getActiveWorksheet().getRange(selectedColumnRange);\n          range.load([\"rowCount\", \"columnCount\", \"columnIndex\"]);\n          await context.sync();\n          \n          const colCount = range.columnCount;\n          const rowCount = range.rowCount;\n          const colIndex = range.columnIndex;\n          \n          if (colCount !== 1) {\n            showGlobalMsg('Veuillez sélectionner une seule colonne.', 'error');\n            return;\n          }\n          \n          // Correction stricte : ne garder qu'une seule fois chaque valeur harmonisée unique (après normalisation), liste compacte\n          const dejaVu = new Set();\n          const uniqueResults = [];\n          for (let i = 0; i < rowCount; i++) {\n            const norm = textesNettoyes[i];\n            const val = harmonisedResults[i] !== undefined && harmonisedResults[i] !== null ? harmonisedResults[i] : '';\n            if (norm && !dejaVu.has(norm) && val !== '') {\n              uniqueResults.push([val]);\n              dejaVu.add(norm);\n            }\n          }\n          \n          // Compléter avec des vides pour garder la même taille que la plage cible\n          while (uniqueResults.length < rowCount) uniqueResults.push(['']);\n          const resultArray = uniqueResults;\n          \n          // Ajustement de la taille du tableau pour correspondre à la plage cible\n          const destRange = range.getOffsetRange(0, 1).getResizedRange(rowCount - 1, 0);\n          destRange.load([\"rowCount\", \"columnCount\"]);\n          await context.sync();\n          \n          const destRows = destRange.rowCount;\n          const destCols = destRange.columnCount;\n          \n          if (resultArray.length !== destRows) {\n            while (resultArray.length < destRows) resultArray.push(Array(destRange.columnCount).fill(''));\n            if (resultArray.length > destRows) resultArray = resultArray.slice(0, destRows);\n          }\n          \n          if (resultArray[0] && resultArray[0].length !== destRange.columnCount) {\n            resultArray = resultArray.map(row => {\n              let r = row.slice(0, destRange.columnCount);\n              while (r.length < destRange.columnCount) r.push('');\n              return r;\n            });\n          }\n          \n          destRange.values = resultArray;\n          await context.sync();\n        });\n      };\n    }\n    // Mettre à jour le statut au chargement\n    updateHarmoStatus();\n\n    // Ajout du slider de seuil de similarité dans l'UI harmonisation\n    const harmoContainer = document.querySelector('.harmonisation-container');\n    if (harmoContainer && !document.getElementById('similarity-threshold')) {\n      const sliderDiv = document.createElement('div');\n      sliderDiv.style.margin = '10px 0 18px 0';\n      sliderDiv.innerHTML = `\n        <label for=\"similarity-threshold\">Seuil de similarité floue : <span id=\"similarity-threshold-value\">60</span>%</label>\n        <input type=\"range\" id=\"similarity-threshold\" min=\"40\" max=\"100\" value=\"60\" step=\"1\" style=\"vertical-align:middle;width:120px;margin-left:10px;\">\n      `;\n      harmoContainer.insertBefore(sliderDiv, harmoContainer.querySelector('#harmo-dest-choice'));\n      const slider = document.getElementById('similarity-threshold');\n      const sliderVal = document.getElementById('similarity-threshold-value');\n      slider.oninput = function() { sliderVal.textContent = slider.value; };\n      window.similarityThreshold = parseInt(slider.value, 10);\n      slider.addEventListener('input', function() { window.similarityThreshold = parseInt(slider.value, 10); });\n    }\n  });\n\n  function safeOnClick(id, handler) {\n  const el = document.getElementById(id);\n  if (el) {\n    if (typeof handler === 'function') {\n      el.onclick = handler;\n    } else if (handler && typeof handler.then === 'function') {\n      el.onclick = () => handler.catch(error => console.error('Error in click handler:', error));\n    }\n  }\n  // Ne pas afficher d'erreur pour les éléments manquants\n}\n\n  safeOnClick('select-column-btn', async function() { /* ... */ });\n  safeOnClick('load-bdd-btn', function() { /* ... */ });\n  safeOnClick('harmonize-btn', async function() { /* ... */ });\n  safeOnClick('apply-harmonisation-btn', async function() { /* ... */ });\n  safeOnClick('cancel-harmonisation-btn', function() { /* ... */ });\n  safeOnClick('close-modal', function() { /* ... */ });\n  safeOnClick('download-bdd-btn', function() { /* ... */ });\n  safeOnClick('undo-harmonisation-btn', async function() { /* ... */ });\n\n\n\n  function updateHarmoStatus() {\n    const statusDiv = document.getElementById('harmo-status');\n    if (!statusDiv) return;\n    const col = window.selectedColumnRange ? `Colonne sélectionnée : <b>${window.selectedColumnRange}</b>` : '<span style=\"color:#a8071a\">Aucune colonne sélectionnée</span>';\n    const bdd = window.bddFilename ? `BDD chargée : <b>${window.bddFilename}</b>` : '<span style=\"color:#a8071a\">Aucune BDD chargée</span>';\n    statusDiv.innerHTML = col + ' &nbsp; | &nbsp; ' + bdd;\n  }\n\n  function showHarmonisationModal(rows, excelRange, theme) {\n    const modal = document.getElementById('modal-harmonisation');\n    const tbody = document.querySelector('#harmonisation-table tbody');\n    tbody.innerHTML = '';\n    \n    // Créer le datalist pour l'autocomplétion\n    let datalist = document.getElementById('harmonisation-values');\n    if (!datalist) {\n      datalist = document.createElement('datalist');\n      datalist.id = 'harmonisation-values';\n      document.body.appendChild(datalist);\n    }\n    \n    // Récupérer toutes les valeurs harmonisées uniques\n    const uniqueHarmonises = new Set();\n    if (window.bddWorkbook && theme) {\n      const sheet = window.bddWorkbook.Sheets[theme];\n      const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n      for (let i = 1; i < data.length; i++) {\n        if (data[i] && data[i][1]) uniqueHarmonises.add(data[i][1]);\n      }\n    }\n    \n    // Mettre à jour le datalist\n    datalist.innerHTML = Array.from(uniqueHarmonises)\n      .map(value => `<option value=\"${value}\">`)\n      .join('');\n\n    // Sauvegarder l'état initial pour pouvoir annuler\n    const initialState = JSON.parse(JSON.stringify(rows));\n    \n    // Filtrer les doublons d'affichage\n    const seenHarmo = new Set();\n    let rowsAffichage = [];\n    for (const row of rows) {\n      const harmonise = row.apres || (row.suggestions && row.suggestions[0] && row.suggestions[0].harmonise) || '';\n      const normHarmo = preprocess(harmonise);\n      if (harmonise) {\n        if (seenHarmo.has(normHarmo)) continue; // déjà affiché\n        seenHarmo.add(normHarmo);\n        rowsAffichage.push(row);\n      } else {\n        // Pas de valeur harmonisée : on affiche toujours la ligne\n        rowsAffichage.push(row);\n      }\n    }\n    \n    // Générer le tableau HTML\n    rowsAffichage.forEach((row, i) => {\n      const tr = document.createElement('tr');\n      // Utilise l'index réel dans rows pour les handlers\n      tr.setAttribute('data-idx', rows.indexOf(row));\n      tr.style.background = row.source === 'BDD exacte' ? '#f6ffed' :\n                           row.source === 'Suggestion unique' ? '#e6fffb' :\n                           row.source === 'Suggestion' ? '#e6fffb' :\n                           row.source === 'Manuel' ? '#fff7e6' : '#fff1f0';\n\n      const avant = row.avant || '';\n      const apres = row.apres || '';\n      const suggestions = row.suggestions || [];\n\n      const seenSuggestions = new Set();\n      const uniqueSuggestions = [];\n      for (const s of suggestions) {\n        if (!s.harmonise) continue;\n        const norm = preprocess(s.harmonise);\n        if (seenSuggestions.has(norm)) continue;\n        seenSuggestions.add(norm);\n        uniqueSuggestions.push(s);\n      }\n\n      tr.innerHTML = `\n        <td class=\"avant-cell\">${avant}</td>\n        <td class=\"apres-cell\">${apres}</td>\n        <td class=\"suggestions-cell\">\n          ${uniqueSuggestions.map((s, j) => `\n            <button class=\"suggestion-btn ${apres === s.harmonise ? 'selected' : ''}\"\n                    data-idx=\"${rows.indexOf(row)}\"\n                    data-val=\"${s.harmonise}\"\n                    style=\"background: ${apres === s.harmonise ? '#52c41a' : '#f0f5ff'};\n                           color: ${apres === s.harmonise ? '#fff' : '#333'};\n                           font-weight: ${apres === s.harmonise ? '600' : 'normal'}\">\n              ${s.harmonise} (${s.score}%)\n            </button>\n          `).join(' ')}\n        </td>\n        <td class=\"manuel-cell\">\n          <div style=\"position: relative;\">\n            <input type=\"text\" \n                   class=\"manuel-input\" \n                   value=\"${apres}\"\n                   list=\"harmonisation-values\"\n                   placeholder=\"Saisie manuelle...\"\n                   style=\"width: 100%; padding: 4px; border: 1px solid #d9d9d9; border-radius: 4px;\">\n          </div>\n        </td>\n      `;\n      tbody.appendChild(tr);\n    });\n    \n    // Afficher la modale\n    modal.style.display = 'block';\n    \n    // Handler pour fermer la modale\n    const closeBtn = document.getElementById('close-modal');\n    if (closeBtn) {\n      closeBtn.onclick = function() {\n        modal.style.display = 'none';\n      };\n    }\n    \n    // Handler pour le bouton Annuler\n    const cancelBtn = document.getElementById('cancel-harmonisation-btn');\n    if (cancelBtn) {\n      cancelBtn.onclick = function() {\n        // Restaurer l'état initial\n        Object.keys(initialState).forEach(idx => {\n          rows[idx] = JSON.parse(JSON.stringify(initialState[idx]));\n        });\n\n        // Mettre à jour l'affichage du tableau\n        tbody.querySelectorAll('tr').forEach(tr => {\n          const idx = parseInt(tr.getAttribute('data-idx'));\n          const row = rows[idx];\n          if (!row) return;\n\n          // Mettre à jour la cellule \"après\"\n          const apresCell = tr.querySelector('.apres-cell');\n          if (apresCell) {\n            apresCell.textContent = row.apres || '';\n          }\n\n          // Mettre à jour l'input manuel\n          const manuelInput = tr.querySelector('.manuel-input');\n          if (manuelInput) {\n            manuelInput.value = row.apres || '';\n          }\n\n          // Mettre à jour le style de la ligne\n          tr.style.background = row.source === 'BDD exacte' ? '#f6ffed' :\n                              row.source === 'Suggestion unique' ? '#e6fffb' :\n                              row.source === 'Suggestion' ? '#e6fffb' :\n                              row.source === 'Manuel' ? '#fff7e6' : '#fff1f0';\n\n          // Mettre à jour les boutons de suggestion\n          tr.querySelectorAll('.suggestion-btn').forEach(btn => {\n            const suggestionVal = btn.getAttribute('data-val');\n            const isSelected = row.apres === suggestionVal;\n            btn.style.background = isSelected ? '#52c41a' : '#f0f5ff';\n            btn.style.color = isSelected ? '#fff' : '#333';\n            btn.style.fontWeight = isSelected ? '600' : 'normal';\n          });\n        });\n\n        // Fermer la modale\n        modal.style.display = 'none';\n      };\n    }\n    \n    // Handler pour le bouton Tout valider\n    const applyBtn = document.getElementById('apply-harmonisation-btn');\n    if (applyBtn) {\n      applyBtn.onclick = async function() {\n        // Appliquer les harmonisations\n        const harmonisedResults = rows.map(row => [row.apres || '']);\n        \n        // Collecter les nouvelles harmonisations\n        const theme = document.getElementById('theme-select').value;\n        const newHarmonisations = rows\n          .filter(row => row.avant && row.apres && row.source !== 'BDD exacte')\n          .map(row => [row.avant, row.apres]);\n        \n        // Mettre à jour la BDD avec les nouvelles harmonisations\n        if (newHarmonisations.length > 0) {\n          if (!window.newHarmoRowsByTheme) window.newHarmoRowsByTheme = {};\n          if (!window.newHarmoRowsByTheme[theme]) window.newHarmoRowsByTheme[theme] = [];\n          window.newHarmoRowsByTheme[theme].push(...newHarmonisations);\n          \n          // Sauvegarder immédiatement la BDD\n          await saveBddWithBackup(window.newHarmoRowsByTheme);\n        }\n        \n        await Excel.run(async (context) => {\n          const range = context.workbook.worksheets.getActiveWorksheet().getRange(excelRange);\n          range.load([\"rowCount\", \"columnCount\"]);\n          await context.sync();\n          \n          // Déterminer la destination (remplacement ou nouvelle colonne)\n          const destChoice = document.querySelector('input[name=\"harmo-dest\"]:checked').value;\n          let destRange;\n          \n          if (destChoice === 'replace') {\n            destRange = range;\n          } else {\n            // Insérer à droite\n            destRange = range.getOffsetRange(0, 1);\n          }\n          \n          // Charger les propriétés nécessaires du destRange\n          destRange.load([\"rowCount\", \"columnCount\", \"address\"]);\n          await context.sync();\n          \n          // Ajuster la taille du tableau de résultats\n          while (harmonisedResults.length < range.rowCount) {\n            harmonisedResults.push(['']);\n          }\n          if (harmonisedResults.length > range.rowCount) {\n            harmonisedResults.length = range.rowCount;\n          }\n          \n          // Appliquer les valeurs\n          destRange.values = harmonisedResults;\n          await context.sync();\n          \n          // Sauvegarder l'état pour undo\n          window.lastHarmonisation = {\n            address: destRange.address,\n            values: harmonisedResults\n          };\n          \n          // Afficher le bouton undo\n          document.getElementById('undo-harmonisation-btn').style.display = 'inline-block';\n        });\n        \n        // Fermer la modale\n        modal.style.display = 'none';\n        \n        // Message de confirmation\n        showGlobalMsg('Harmonisation appliquée avec succès.', 'success');\n      };\n    }\n    \n    // Après génération du tableau, attacher les handlers sur les boutons de suggestion\n    setTimeout(() => {\n      tbody.querySelectorAll('.suggestion-btn').forEach(btn => {\n        btn.onclick = function(e) {\n          const idx = parseInt(btn.getAttribute('data-idx'));\n          const val = btn.getAttribute('data-val');\n          \n          // Vérifier que l'index est valide et que la ligne existe\n          if (isNaN(idx) || !rows[idx]) {\n            console.warn('Index invalide ou ligne non trouvée:', idx);\n            return;\n          }\n          \n          // Mettre à jour la ligne\n          rows[idx].apres = val;\n          rows[idx].source = 'Suggestion';\n          \n          // Mettre à jour l'affichage\n          const tr = tbody.querySelector(`tr[data-idx='${idx}']`);\n          if (tr) {\n            const apresCell = tr.querySelector('.apres-cell');\n            const manuelInput = tr.querySelector('.manuel-input');\n            \n            if (apresCell) apresCell.textContent = val;\n            if (manuelInput) manuelInput.value = val;\n            \n            tr.style.background = '#e6fffb';\n            \n            // Mettre à jour le style des boutons de la ligne\n            tr.querySelectorAll('.suggestion-btn').forEach(b => {\n              b.style.background = '#f0f5ff';\n              b.style.color = '#333';\n              b.style.fontWeight = 'normal';\n            });\n            \n            btn.style.background = '#52c41a';\n            btn.style.color = '#fff';\n            btn.style.fontWeight = '600';\n          }\n        };\n      });\n      \n      // Handler pour la saisie manuelle\n      tbody.querySelectorAll('.manuel-input').forEach(input => {\n        input.onchange = function(e) {\n          const tr = input.closest('tr');\n          if (!tr) return;\n          \n          const idx = parseInt(tr.getAttribute('data-idx'));\n          if (isNaN(idx) || !rows[idx]) {\n            console.warn('Index invalide ou ligne non trouvée:', idx);\n            return;\n          }\n          \n          const val = input.value.trim();\n          rows[idx].apres = val;\n          rows[idx].source = 'Manuel';\n          \n          const apresCell = tr.querySelector('.apres-cell');\n          if (apresCell) {\n            apresCell.textContent = val;\n          }\n          tr.style.background = '#fff7e6';\n          \n          // Réinitialiser le style des boutons de suggestion\n          tr.querySelectorAll('.suggestion-btn').forEach(b => {\n            b.style.background = '#f0f5ff';\n            b.style.color = '#333';\n            b.style.fontWeight = 'normal';\n          });\n        };\n      });\n    }, 0);\n    \n    // Mettre à jour le bouton de sauvegarde\n    updateSaveBddBtnVisibility();\n  }\n\n  // Prétraitement avancé\n  function preprocess(str) {\n    if (!str || typeof str !== 'string') return '';\n    let s = str.normalize('NFD').replace(/[\u0000-]/g, c => c.normalize('NFD').replace(/\\p{Diacritic}/gu, ''));\n    s = s.toUpperCase();\n    s = s.replace(/[^A-Z0-9 ]/g, ' '); // caractères spéciaux\n    s = s.replace(/\\b(LE|LA|LES|DE|DES|DU|THE|AND|A|AN|UN|UNE|ET|EN|AU|AUX|SUR|SOUS|DANS|PAR|POUR|AVEC|SANS|CHEZ|VIA|VERS|DEPUIS|JUSQU'A|JUSQUA|JUSQU'À|JUSQU'À|L'|L'|D'|D'|L'|L')\\b/gi, ' '); // mots vides\n    s = s.replace(/\\bPREMIER\\b/g, '1');\n    s = s.replace(/\\bDEUXIEME\\b/g, '2');\n    s = s.replace(/\\bTROISIEME\\b/g, '3');\n    s = s.replace(/\\bQUATRIEME\\b/g, '4');\n    s = s.replace(/\\bCINQUIEME\\b/g, '5');\n    s = s.replace(/\\s+/g, ' ').trim();\n    return s;\n  }\n\n  // Fonction pour surligner les différences entre deux chaînes (simple diff caractère à caractère)\n  function highlightDiff(a, b) {\n    let res = '';\n    for (let i = 0; i < Math.max(a.length, b.length); i++) {\n      if (a[i] !== b[i]) {\n        res += `<span style='background: #ffe0e0; color: #c00;'>${b[i] || ''}</span>`;\n      } else {\n        res += b[i] || '';\n      }\n    }\n    return res;\n  }\n\n  // Soundex phonétique\n  function soundex(str) {\n    if (!str) return '';\n    str = str.toUpperCase().replace(/[^A-Z]/g, '');\n    if (!str) return '';\n    const first = str[0];\n    const map = {A:'',E:'',I:'',O:'',U:'',Y:'',H:'',W:'',B:'1',F:'1',P:'1',V:'1',C:'2',G:'2',J:'2',K:'2',Q:'2',S:'2',X:'2',Z:'2',D:'3',T:'3',L:'4',M:'5',N:'5',R:'6'};\n    let out = first;\n    let prev = map[first] || '';\n    for (let i = 1; i < str.length; i++) {\n      const code = map[str[i]] || '';\n      if (code !== prev) out += code;\n      if (code) prev = code;\n    }\n    out = out.replace(/0/g, '');\n    return (out + '000').slice(0, 4);\n  }\n  // Surlignage des différences\n  function highlightDiffInline(a, b) {\n    let res = '';\n    for (let i = 0; i < Math.max(a.length, b.length); i++) {\n      if ((a[i]||'') !== (b[i]||'')) res += `<span style='background:#fff59d;color:#c00;border-radius:3px;padding:0 2px;'>${b[i]||''}</span>`;\n      else res += b[i]||'';\n    }\n    return res;\n  }\n\n  // Ajout handler bouton sauvegarde BDD\n  function getTodayIsoDate() {\n    const d = new Date();\n    return d.toISOString().slice(0,10);\n  }\n\n  // Sauvegarde silencieuse pour l'harmonisation\n  async function saveBddWithBackup(newRowsByTheme = {}) {\n    if (!window.bddWorkbook) {\n      showGlobalMsg('Aucune BDD chargée.', 'error');\n      return;\n    }\n    const newWb = XLSX.utils.book_new();\n    window.bddWorkbook.SheetNames.forEach(sheetName => {\n      const oldSheet = window.bddWorkbook.Sheets[sheetName];\n      const oldData = XLSX.utils.sheet_to_json(oldSheet, { header: 1 });\n      let allRows = [...oldData];\n      // Ajout des nouvelles harmonisations pour ce thème\n      const newRows = newRowsByTheme[sheetName] || [];\n      newRows.forEach(row => {\n        if (!allRows.some(r => r[0] === row[0] && r[1] === row[1])) {\n          allRows.push(row);\n        }\n      });\n      const ws = XLSX.utils.aoa_to_sheet(allRows);\n      XLSX.utils.book_append_sheet(newWb, ws, sheetName);\n    });\n    const wbout = XLSX.write(newWb, { bookType: 'xlsx', type: 'array' });\n    \n    try {\n      // Sauvegarder les données dans les paramètres Office\n      Office.context.document.settings.set('bddWorkbookData', wbout);\n      Office.context.document.settings.saveAsync();\n      window.bddWorkbook = newWb;\n      showGlobalMsg('BDD mise à jour avec succès.', 'success');\n    } catch (err) {\n      console.error('Erreur lors de la sauvegarde:', err);\n      showGlobalMsg('Erreur lors de la mise à jour de la BDD.', 'error');\n    }\n  }\n\n  // Sauvegarde avec dialogue de fichier\n  async function saveBddToFile() {\n    if (!window.bddWorkbook) {\n      showGlobalMsg('Aucune BDD chargée.', 'error');\n      return;\n    }\n    const wbout = XLSX.write(window.bddWorkbook, { bookType: 'xlsx', type: 'array' });\n    const blob = new Blob([wbout], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n    \n    try {\n      // Configurer les options pour le dialogue de sauvegarde\n      const opts = {\n        suggestedName: `bdd_harmonisee_${getTodayIsoDate()}.xlsx`,\n        types: [{\n          description: 'Fichier Excel',\n          accept: {\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx']\n          }\n        }]\n      };\n\n      // Ouvrir le dialogue de sauvegarde\n      const handle = await window.showSaveFilePicker(opts);\n      const writable = await handle.createWritable();\n      await writable.write(blob);\n      await writable.close();\n      \n      showGlobalMsg('BDD sauvegardée avec succès.', 'success');\n    } catch (err) {\n      if (err.name !== 'AbortError') {\n        console.error('Erreur lors de la sauvegarde:', err);\n        showGlobalMsg('Erreur lors de la sauvegarde de la BDD.', 'error');\n      }\n    }\n  }\n\n  document.addEventListener('DOMContentLoaded', function() {\n    const saveBtn = document.getElementById('save-bdd-btn');\n    if (saveBtn) {\n      saveBtn.style.display = 'inline-block';\n      saveBtn.onclick = saveBddToFile;\n    }\n    updateSaveBddBtnVisibility();\n  });\n\n  function updateSaveBddBtnVisibility() {\n    const saveBtn = document.getElementById('save-bdd-btn');\n    if (!saveBtn) return;\n    if (window.bddWorkbook) {\n      saveBtn.style.display = 'inline-block';\n    } else {\n      saveBtn.style.display = 'none';\n    }\n  }\n\n  // Ajout : après harmonisation, insérer une colonne unique harmonisée\n  async function insertUniqueHarmonisedColumn(harmonisedValues, excelRange) {\n    // Filtrer les valeurs uniques dans l'ordre d'apparition\n    const uniques = [];\n    const seen = new Set();\n    for (const val of harmonisedValues) {\n      if (val && !seen.has(val)) {\n        uniques.push([val]); // Excel attend un tableau de lignes\n        seen.add(val);\n      }\n    }\n    await Excel.run(async (context) => {\n      const range = context.workbook.worksheets.getActiveWorksheet().getRange(excelRange);\n      range.load([\"rowCount\", \"columnCount\", \"columnIndex\"]);\n      await context.sync();\n      \n      // Insérer la colonne unique à droite de la sélection\n      const destCol = range.columnIndex + range.columnCount;\n      const destRange = range.getOffsetRange(0, range.columnCount).getResizedRange(uniques.length - 1, 0);\n      destRange.load([\"rowCount\", \"columnCount\"]);\n      await context.sync();\n\n      // Ajuster la taille du tableau pour correspondre à la plage cible\n      if (uniques.length !== destRange.rowCount) {\n        while (uniques.length < destRange.rowCount) uniques.push(Array(destRange.columnCount).fill(''));\n        if (uniques.length > destRange.rowCount) uniques = uniques.slice(0, destRange.rowCount);\n      }\n      if (uniques[0] && uniques[0].length !== destRange.columnCount) {\n        uniques = uniques.map(row => {\n          let r = row.slice(0, destRange.columnCount);\n          while (r.length < destRange.columnCount) r.push('');\n          return r;\n        });\n      }\n      destRange.values = uniques;\n      await context.sync();\n    });\n  }\n\n  // Fonctions de similarité\n  function normaliserTexte(texte) {\n    if (!texte) return '';\n    return texte.toString()\n      .toLowerCase()\n      .normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n      .replace(/[^a-z0-9\\s]/g, ' ')\n      .replace(/\\s+/g, ' ')\n      .trim();\n  }\n\n  function jaroWinkler(s1, s2) {\n    const prefixScale = 0.1;\n    const maxL = 4;\n\n    if (s1 === s2) return 1;\n    if (!s1 || !s2) return 0;\n\n    const matchWindow = Math.floor(Math.max(s1.length, s2.length) / 2) - 1;\n    const matches1 = new Array(s1.length).fill(false);\n    const matches2 = new Array(s2.length).fill(false);\n    let matches = 0;\n    \n    for (let i = 0; i < s1.length; i++) {\n      const start = Math.max(0, i - matchWindow);\n      const end = Math.min(i + matchWindow + 1, s2.length);\n      \n      for (let j = start; j < end; j++) {\n        if (!matches2[j] && s1[i] === s2[j]) {\n          matches1[i] = true;\n          matches2[j] = true;\n          matches++;\n          break;\n        }\n      }\n    }\n\n    if (matches === 0) return 0;\n\n    let transpositions = 0;\n    let k = 0;\n    \n    for (let i = 0; i < s1.length; i++) {\n      if (matches1[i]) {\n        while (!matches2[k]) k++;\n        if (s1[i] !== s2[k]) transpositions++;\n        k++;\n      }\n    }\n\n    const jaro = (matches / s1.length + matches / s2.length + (matches - transpositions/2) / matches) / 3;\n    \n    let commonPrefix = 0;\n    for (let i = 0; i < Math.min(maxL, Math.min(s1.length, s2.length)); i++) {\n      if (s1[i] === s2[i]) commonPrefix++;\n      else break;\n    }\n\n    return jaro + (prefixScale * commonPrefix * (1 - jaro));\n  }\n\n  // ... existing code ...\n\n  // Fonction pour mettre à jour les suggestions\n  function updateSuggestions(searchText, input, suggestionsList, result) {\n    console.log(\"Updating suggestions for:\", searchText); // Debug log\n    \n    const theme = document.getElementById('theme-select').value;\n    if (!window.bddWorkbook || !theme) {\n      console.log(\"No workbook or theme available\"); // Debug log\n      return;\n    }\n    \n    const sheet = window.bddWorkbook.Sheets[theme];\n    const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n    \n    // Récupérer toutes les valeurs harmonisées uniques\n    const uniqueHarmonises = new Set();\n    for (let i = 1; i < data.length; i++) {\n      if (data[i] && data[i][1]) uniqueHarmonises.add(data[i][1]);\n    }\n    \n    // Ajouter la nouvelle valeur si elle n'existe pas déjà\n    if (searchText && !uniqueHarmonises.has(searchText)) {\n      uniqueHarmonises.add(searchText);\n    }\n    \n    // Filtrer et trier les suggestions\n    const suggestions = Array.from(uniqueHarmonises)\n      .map(harm => {\n        const harmNorm = normaliserTexte(harm);\n        const searchNorm = normaliserTexte(searchText);\n        const score = Math.round(similarity(searchNorm, harmNorm) * 100);\n        return { harm, score };\n      })\n      .filter(s => s.score >= 40 || s.harm.toLowerCase().includes(searchText.toLowerCase()))\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 5);\n    \n    console.log(\"Filtered suggestions:\", suggestions); // Debug log\n    \n    // Afficher les suggestions\n    if (suggestions.length > 0) {\n      suggestionsList.innerHTML = suggestions.map(s => `\n        <div class=\"suggestion-item\" \n             style=\"padding: 8px; cursor: pointer; border-bottom: 1px solid #f0f0f0;\n                    background: ${s.score >= 80 ? '#f6ffed' : s.score >= 60 ? '#e6f7ff' : 'white'}\"\n             data-value=\"${s.harm}\">\n          ${s.harm} (${s.score}%)\n        </div>\n      `).join('');\n      suggestionsList.style.display = 'block';\n      \n      // Ajouter les handlers pour les suggestions\n      suggestionsList.querySelectorAll('.suggestion-item').forEach(item => {\n        item.onclick = function() {\n          const val = item.getAttribute('data-value');\n          input.value = val;\n          suggestionsList.style.display = 'none';\n          \n          // Mettre à jour la valeur harmonisée\n          const apresCell = input.closest('tr').querySelector('.apres-cell');\n          if (apresCell) {\n            apresCell.textContent = val;\n          }\n          \n          // Mettre à jour la BDD\n          if (!window.bddWorkbook || !theme) return;\n          \n          const sheet = window.bddWorkbook.Sheets[theme];\n          const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n          \n          // Trouver et mettre à jour la ligne correspondante\n          const brut = result.brut;\n          let found = false;\n          for (let i = 1; i < data.length; i++) {\n            if (data[i] && data[i][0] === brut) {\n              data[i][1] = val;\n              found = true;\n              break;\n            }\n          }\n          \n          // Si la valeur n'existe pas, l'ajouter\n          if (!found) {\n            data.push([brut, val]);\n          }\n          \n          // Mettre à jour la feuille\n          const ws = XLSX.utils.aoa_to_sheet(data);\n          window.bddWorkbook.Sheets[theme] = ws;\n          \n          // Activer le bouton de sauvegarde\n          updateSaveBddBtnVisibility();\n        };\n      });\n    } else {\n      // Si aucune suggestion, ajouter un bouton pour créer une nouvelle entrée\n      suggestionsList.innerHTML = `\n        <div class=\"suggestion-item new-entry\" \n             style=\"padding: 8px; cursor: pointer; border-bottom: 1px solid #f0f0f0; background: #f6ffed;\">\n          Créer une nouvelle entrée : \"${searchText}\"\n        </div>\n      `;\n      suggestionsList.style.display = 'block';\n      \n      // Handler pour créer une nouvelle entrée\n      const newEntryBtn = suggestionsList.querySelector('.new-entry');\n      if (newEntryBtn) {\n        newEntryBtn.onclick = function() {\n          input.value = searchText;\n          suggestionsList.style.display = 'none';\n          \n          // Mettre à jour la valeur harmonisée\n          const apresCell = input.closest('tr').querySelector('.apres-cell');\n          if (apresCell) {\n            apresCell.textContent = searchText;\n          }\n          \n          // Mettre à jour la BDD\n          if (!window.bddWorkbook || !theme) return;\n          \n          const sheet = window.bddWorkbook.Sheets[theme];\n          const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n          \n          // Ajouter la nouvelle entrée\n          const brut = result.brut;\n          if (!data.some(row => row && row[0] === brut)) {\n            data.push([brut, searchText]);\n            \n            // Mettre à jour la feuille\n            const ws = XLSX.utils.aoa_to_sheet(data);\n            window.bddWorkbook.Sheets[theme] = ws;\n            \n            // Activer le bouton de sauvegarde\n            updateSaveBddBtnVisibility();\n          }\n        };\n      }\n    }\n  }\n\n  function initHelpSystem() {\n    const showHelpBtn = document.getElementById('show-help-btn');\n    const helpModal = document.getElementById('help-modal');\n    const closeHelpBtn = document.getElementById('close-help-modal');\n\n    if (showHelpBtn && helpModal && closeHelpBtn) {\n      showHelpBtn.onclick = function() {\n        helpModal.style.display = 'block';\n      };\n\n      closeHelpBtn.onclick = function() {\n        helpModal.style.display = 'none';\n      };\n\n      // Fermer la modale si on clique en dehors\n      window.onclick = function(event) {\n        if (event.target === helpModal) {\n          helpModal.style.display = 'none';\n        }\n      };\n    }\n  }\n}\n\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Contoso Task Pane Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <div id=\\\"global-msg\\\" style=\\\"display:none;max-width:900px;margin:18px auto 0 auto;padding:10px 18px;border-radius:7px;font-size:15px;background:#fffbe6;color:#b36b00;border:1px solid #ffe58f\\\"></div> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <h1 class=\\\"ms-font-su\\\">Harmonisation Excel</h1> </header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:flex\\\"> <div class=\\\"welcome-panel active-section\\\" style=\\\"background:#f4f8fb;border-radius:8px;padding:18px 24px;margin-bottom:18px;max-width:700px\\\"> <h2 style=\\\"margin-top:0\\\">Bienvenue dans l'outil d'harmonisation intelligente</h2> <p>Cette extension vous permet&nbsp;:</p> <ul> <li>Harmoniser rapidement une colonne de données brutes selon un référentiel personnalisable</li> <li>Bénéficier de suggestions automatiques (matching flou) et de la validation manuelle</li> <li>Rechercher et filtrer les correspondances existantes</li> <li>Annuler la dernière harmonisation (Undo)</li> <li>Enrichir dynamiquement votre base de correspondances</li> </ul> <div class=\\\"quick-guide\\\" style=\\\"margin-top:12px\\\"> <strong>Guide rapide&nbsp;:</strong> <ol style=\\\"margin:8px 0 0 18px\\\"> <li>Sélectionnez la colonne à harmoniser dans Excel</li> <li>Chargez ou créez votre BDD d'harmonisation</li> <li>Choisissez le thème (feuille) adapté</li> <li>Cliquez sur <b>Harmoniser</b> et validez les suggestions</li> <li>Téléchargez la BDD enrichie si besoin</li> </ol> </div> </div> <div class=\\\"harmonisation-container\\\"> <h2>Harmonisation de colonne</h2> <div id=\\\"harmo-status\\\" style=\\\"margin-bottom:10px;color:#217346;font-size:14px\\\"></div> <button id=\\\"select-column-btn\\\">Sélectionner la colonne à harmoniser</button> <input type=\\\"file\\\" id=\\\"bdd-file-input\\\" accept=\\\".xlsx,.xls\\\" style=\\\"display:none\\\"/> <button id=\\\"load-bdd-btn\\\">Charger la BDD d'harmonisation</button> <span id=\\\"bdd-filename\\\" style=\\\"display:none;margin-left:10px\\\"></span> <div id=\\\"theme-section\\\" style=\\\"display:none\\\"> <label for=\\\"theme-select\\\">Thème :</label> <select id=\\\"theme-select\\\"></select> </div> <div id=\\\"harmo-dest-choice\\\" style=\\\"margin:14px 0 18px 0\\\"> <label style=\\\"margin-right:18px\\\"><input type=\\\"radio\\\" name=\\\"harmo-dest\\\" value=\\\"replace\\\"> Remplacer la colonne sélectionnée</label> <label><input type=\\\"radio\\\" name=\\\"harmo-dest\\\" value=\\\"right\\\" checked=\\\"checked\\\"> Insérer à droite de la sélection</label> </div> <button id=\\\"harmonize-btn\\\" style=\\\"display:none\\\">Harmoniser</button> <div id=\\\"report-section\\\" style=\\\"display:none\\\"> <h3>Valeurs non trouvées :</h3> <ul id=\\\"not-found-list\\\"></ul> </div> <button id=\\\"download-bdd-btn\\\" style=\\\"display:none;margin-left:10px\\\">Télécharger la BDD</button> <button id=\\\"save-bdd-btn\\\" style=\\\"display:none;margin-left:10px\\\">Sauvegarder la BDD</button> <div id=\\\"search-section\\\" style=\\\"display:none;margin-top:16px\\\"> <input type=\\\"text\\\" id=\\\"search-mapping\\\" placeholder=\\\"Rechercher dans la BDD...\\\" style=\\\"width:60%;padding:4px\\\"/> <table id=\\\"mapping-table\\\" style=\\\"width:100%;border-collapse:collapse;margin-top:8px\\\"> <thead> <tr> <th>Brut</th> <th>Harmonisé</th> </tr> </thead> <tbody></tbody> </table> </div> <button id=\\\"undo-harmonisation-btn\\\" style=\\\"display:none;margin-top:10px\\\">Annuler la dernière harmonisation</button> </div> </main> <div id=\\\"modal-harmonisation\\\" class=\\\"modal\\\" style=\\\"display:none\\\"> <div class=\\\"modal-content\\\" style=\\\"max-width:820px;padding:32px 36px 28px 36px;border-radius:18px;box-shadow:0 6px 32px #0002;background:#fff\\\"> <button id=\\\"close-modal\\\" class=\\\"close-modal\\\" aria-label=\\\"Fermer\\\" style=\\\"position:absolute;top:18px;right:22px;font-size:2rem;background:0 0;border:none;color:#888;cursor:pointer\\\">&times;</button> <h2 style=\\\"text-align:center;font-size:2.1rem;margin-bottom:8px;letter-spacing:.5px\\\">Harmonisation de colonne</h2> <div id=\\\"harmonisation-table-container\\\" style=\\\"margin-bottom:12px\\\"> <table id=\\\"harmonisation-table\\\" style=\\\"width:100%;margin-bottom:8px;border-radius:10px;overflow:hidden;box-shadow:0 1px 8px #0001;background:#fafcff\\\"> <thead style=\\\"background:#f0f5ff\\\"> <tr style=\\\"font-size:1.08rem\\\"> <th style=\\\"padding:10px 0\\\">Valeur brute</th> <th style=\\\"padding:10px 0\\\">Suggestions</th> <th style=\\\"padding:10px 0\\\">Saisie manuelle</th> <th style=\\\"padding:10px 0\\\">Résultat</th> </tr> </thead> <tbody></tbody> </table> </div> <div id=\\\"harmo-stats-bar\\\" style=\\\"margin-bottom:18px;font-size:15px;background:#f7f7fa;border-radius:7px;padding:7px 0;text-align:center;color:#555;box-shadow:0 1px 4px #0001\\\"></div> <div class=\\\"modal-actions\\\" style=\\\"display:flex;gap:24px;justify-content:center;margin-top:10px\\\"> <button id=\\\"apply-harmonisation-btn\\\" style=\\\"font-size:17px;padding:10px 32px;border-radius:8px;background:#52c41a;color:#fff;font-weight:600;box-shadow:0 2px 8px #52c41a22\\\">Tout valider</button> <button id=\\\"cancel-harmonisation-btn\\\" style=\\\"font-size:17px;padding:10px 32px;border-radius:8px;background:#eee;color:#333;font-weight:600\\\">Annuler</button> <button id=\\\"download-bdd-btn\\\" style=\\\"font-size:17px;padding:10px 32px;border-radius:8px;background:#1890ff;color:#fff;font-weight:600;display:none\\\">Télécharger la BDD enrichie</button> </div> </div> </div> <div id=\\\"harmonisation-stats\\\" style=\\\"display:none;max-width:900px;margin:18px auto 0 auto;padding:10px 18px 10px 18px;border-radius:7px;font-size:15px;background:#f7fbe6;color:#333;border:1px solid #e0e0e0;position:relative\\\"> <button id=\\\"close-stats\\\" style=\\\"position:absolute;top:8px;right:12px;background:0 0;border:none;font-size:1.5rem;color:#888;cursor:pointer\\\">&times;</button> <div id=\\\"harmonisation-stats-content\\\"></div> </div> <nav id=\\\"mini-nav\\\" class=\\\"mini-nav\\\"> <button class=\\\"mini-nav-btn\\\" id=\\\"nav-home\\\" title=\\\"Accueil\\\"> <svg width=\\\"24\\\" height=\\\"24\\\" fill=\\\"none\\\" stroke=\\\"#222\\\" stroke-width=\\\"2\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M3 12L12 3l9 9\\\"/><path d=\\\"M9 21V9h6v12\\\"/></svg> <span>Accueil</span> </button> <button class=\\\"mini-nav-btn\\\" id=\\\"nav-harmo\\\" title=\\\"Harmonisation\\\"> <svg width=\\\"24\\\" height=\\\"24\\\" fill=\\\"none\\\" stroke=\\\"#222\\\" stroke-width=\\\"2\\\" viewBox=\\\"0 0 24 24\\\"><rect x=\\\"3\\\" y=\\\"7\\\" width=\\\"18\\\" height=\\\"13\\\" rx=\\\"2\\\"/><path d=\\\"M16 3v4M8 3v4\\\"/></svg> <span>Harmoniser</span> </button> </nav> <div id=\\\"help-modal\\\" class=\\\"modal\\\" style=\\\"display:none\\\"> <div class=\\\"modal-content\\\" style=\\\"max-width:800px;padding:32px 36px 28px 36px;border-radius:18px;box-shadow:0 6px 32px #0002;background:#fff\\\"> <button id=\\\"close-help-modal\\\" class=\\\"close-modal\\\" aria-label=\\\"Fermer\\\" style=\\\"position:absolute;top:18px;right:22px;font-size:2rem;background:0 0;border:none;color:#888;cursor:pointer\\\">&times;</button> <h2 style=\\\"text-align:center;font-size:2.1rem;margin-bottom:24px;letter-spacing:.5px\\\">Guide d'utilisation</h2> <div style=\\\"max-height:70vh;overflow-y:auto;padding-right:16px\\\"> <section style=\\\"margin-bottom:24px\\\"> <h3 style=\\\"color:#1890ff;margin-bottom:12px\\\">🎯 Objectif de l'outil</h3> <p>Cet outil vous aide à harmoniser vos données Excel en standardisant les valeurs selon une base de données de référence.</p> </section> <section style=\\\"margin-bottom:24px\\\"> <h3 style=\\\"color:#1890ff;margin-bottom:12px\\\">📝 Processus d'harmonisation</h3> <ol style=\\\"padding-left:20px\\\"> <li style=\\\"margin-bottom:8px\\\">Sélectionnez la colonne à harmoniser dans Excel</li> <li style=\\\"margin-bottom:8px\\\">Chargez votre BDD de référence (fichier Excel)</li> <li style=\\\"margin-bottom:8px\\\">Choisissez le thème correspondant à votre colonne</li> <li style=\\\"margin-bottom:8px\\\">Lancez l'harmonisation</li> </ol> </section> <section style=\\\"margin-bottom:24px\\\"> <h3 style=\\\"color:#1890ff;margin-bottom:12px\\\">🔄 Fenêtre d'harmonisation</h3> <ul style=\\\"padding-left:20px\\\"> <li style=\\\"margin-bottom:8px\\\"><strong>Valeur brute :</strong> La valeur originale de votre colonne</li> <li style=\\\"margin-bottom:8px\\\"><strong>Suggestions :</strong> Les correspondances trouvées dans la BDD (avec score de similarité)</li> <li style=\\\"margin-bottom:8px\\\"><strong>Saisie manuelle :</strong> Pour entrer une valeur personnalisée ou choisir parmi les valeurs existantes</li> </ul> </section> <section style=\\\"margin-bottom:24px\\\"> <h3 style=\\\"color:#1890ff;margin-bottom:12px\\\">⚙️ Paramètres importants</h3> <ul style=\\\"padding-left:20px\\\"> <li style=\\\"margin-bottom:12px\\\"> <strong>Seuil de similarité floue (40-100%) :</strong><br> - Contrôle la précision des suggestions<br> - Plus le seuil est élevé, plus les suggestions seront précises<br> - Plus le seuil est bas, plus vous aurez de suggestions </li> </ul> </section> <section style=\\\"margin-bottom:24px\\\"> <h3 style=\\\"color:#1890ff;margin-bottom:12px\\\">💡 Astuces</h3> <ul style=\\\"padding-left:20px\\\"> <li style=\\\"margin-bottom:8px\\\">La saisie manuelle propose l'autocomplétion avec les valeurs existantes</li> <li style=\\\"margin-bottom:8px\\\">Les nouvelles harmonisations sont automatiquement ajoutées à la BDD</li> <li style=\\\"margin-bottom:8px\\\">Utilisez le bouton \\\"Tout valider\\\" pour appliquer les changements</li> <li style=\\\"margin-bottom:8px\\\">Pensez à sauvegarder régulièrement votre BDD</li> </ul> </section> <section> <h3 style=\\\"color:#1890ff;margin-bottom:12px\\\">🎨 Code couleurs</h3> <ul style=\\\"padding-left:20px\\\"> <li style=\\\"margin-bottom:8px;background:#f6ffed;padding:4px 8px\\\">Vert clair : Correspondance exacte trouvée dans la BDD</li> <li style=\\\"margin-bottom:8px;background:#e6fffb;padding:4px 8px\\\">Bleu clair : Suggestion automatique</li> <li style=\\\"margin-bottom:8px;background:#fff7e6;padding:4px 8px\\\">Orange clair : Saisie manuelle</li> <li style=\\\"margin-bottom:8px;background:#fff1f0;padding:4px 8px\\\">Rouge clair : Non trouvé/Non harmonisé</li> </ul> </section> </div> </div> </div> <\" + \"script src=\\\"https://cdn.sheetjs.com/xlsx-0.18.5/package/dist/xlsx.full.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\"><\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","r","t","Symbol","iterator","asyncIterator","u","toStringTag","c","value","configurable","writable","h","Generator","create","done","method","arg","delegate","f","sent","_sent","dispatchException","abrupt","s","type","Context","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","getPrototypeOf","y","x","v","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","return","TypeError","next","w","tryEntries","push","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","similarity","dist","matrix","j","Math","min","levenshtein","max","applyOfficeThemeColor","color","R","G","B","accent","Office","context","host","toLowerCase","officeTheme","accent1","primaryColor","documentElement","style","setProperty","parseInt","substring","toString","showSection","section","getElementById","display","querySelectorAll","el","classList","remove","querySelector","add","removeProperty","setActiveNav","id","btn","getCurrentBddWorkbook","bddData","settings","XLSX","read","Uint8Array","getCurrentBddFilename","updateMappingTable","theme","bddWorkbook","sheet","Sheets","data","utils","sheet_to_json","header","tbody","innerHTML","searchInput","datalist","createElement","uniqueHarmonises","Set","option","appendChild","body","setAttribute","allSearchResults","map","row","brut","harm","addEventListener","filterAndDisplayResults","target","trim","searchText","filter","result","searchLower","includes","tr","onReady","info","HostType","Excel","bddName","bddLoaded","bddFilename","filenameSpan","textContent","themeSelect","SheetNames","showHelpBtn","helpModal","closeHelpBtn","onclick","event","lastHarmonisation","selectColumnBtn","_callee2","_context2","run","_ref2","_callee","range","_context","workbook","getSelectedRange","load","sync","columnCount","showGlobalMsg","selectedColumnRange","address","updateHarmoStatus","_x","console","warn","loadBddBtn","bddFileInput","log","click","onchange","file","files","reader","FileReader","onload","evt","set","Array","from","saveAsync","themeSection","harmonizeBtn","readAsArrayBuffer","jaroWinkler","s1","s2","jaroScore","str1","str2","len1","len2","matchDistance","floor","matches1","fill","matches2","matches","start","end","point","jaro","prefix","searchMapping","normaliserTexte","str","normalize","msg","background","border","setTimeout","oninput","search","searchResults","brutNorm","searchNorm","scoreLev","scoreJW","score","round","sort","showToolMsg","safeOnClick","handler","error","statusDiv","col","bdd","showHarmonisationModal","rows","excelRange","modal","join","_step","initialState","JSON","parse","stringify","seenHarmo","rowsAffichage","_iterator","_createForOfIteratorHelper","harmonise","apres","suggestions","normHarmo","preprocess","has","err","indexOf","source","_step2","avant","seenSuggestions","uniqueSuggestions","_iterator2","norm","closeBtn","cancelBtn","idx","getAttribute","apresCell","manuelInput","suggestionVal","isSelected","fontWeight","applyBtn","_callee36","harmonisedResults","newHarmonisations","_window$newHarmoRowsB","_context36","newHarmoRowsByTheme","_toConsumableArray","saveBddWithBackup","_ref36","_callee35","destChoice","destRange","_context35","worksheets","getActiveWorksheet","getRange","getOffsetRange","rowCount","_x16","val","input","closest","updateSaveBddBtnVisibility","_saveBddWithBackup","_callee39","newRowsByTheme","newWb","wbout","_args39","_context39","book_new","sheetName","oldSheet","allRows","some","ws","aoa_to_sheet","book_append_sheet","write","bookType","saveBddToFile","_saveBddToFile","_callee40","blob","opts","handle","_context40","Blob","suggestedName","Date","toISOString","types","description","accept","showSaveFilePicker","createWritable","close","t0","saveBtn","texte","matchWindow","transpositions","k","commonPrefix","_callee6","loadHarmonisationData","_loadHarmonisationData2","dataLoaded","referentiel","textesNettoyes","mapping","mappingNettoye","harmonisationRows","texteNettoye","referentielBrutsNettoyes","total","exact","suggestion","manuel","nonTrouve","couverture","statsDiv","statsContent","closeStats","harmonisationMemo","_context6","_callee5","_context5","_ref5","_callee4","_context4","isArray","_x3","nettoye","ref","scoreRaw","similarityThreshold","harmonisationMain","_ref4","_callee3","colCount","dejaVu","uniqueResults","_i6","resultArray","destRows","_context3","columnIndex","getResizedRange","_readOnlyError","_x2","URL","createObjectURL","download","removeChild","_callee8","_context8","_ref7","_callee7","_context7","_x4","_callee10","_context10","_ref9","_callee9","uniques","_context9","_x5","_callee12","_context12","prompt","_ref11","_callee11","_context11","split","_x6","_callee14","_context14","_ref13","_callee13","_context13","size","_x7","_callee16","_context16","_ref15","_callee15","counts","_context15","entries","_ref16","_ref17","_x8","_callee18","_context18","_ref19","_callee17","nums","avg","median","_context17","parseFloat","reduce","toFixed","_x9","_callee20","_context20","_ref21","_callee19","_context19","format","getCell","_x10","_callee22","_context22","_ref23","_callee21","_context21","_x11","_callee24","_context24","_ref25","_callee23","seen","_context23","_x12","addHandlerAsync","_callee26","_context26","_ref27","_callee25","_context25","_x13","_callee30","_loadHarmonisationData3","_context30","_callee29","_context29","_ref30","_callee28","_context28","_x15","_ref29","_callee27","_i9","_context27","_x14","harmoContainer","sliderDiv","margin","insertBefore","slider","sliderVal","_callee31","_context31","_callee32","_context32","_callee33","_context33","_callee34","_context34","initHarmonisationHandlers","helpBtn","cssText","___HTML_LOADER_IMPORT_0___","___HTML_LOADER_IMPORT_1___"],"sourceRoot":""}